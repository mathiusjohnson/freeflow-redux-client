[{"/home/mathius/projects/freeflow-redux-client/src/index.js":"1","/home/mathius/projects/freeflow-redux-client/src/App.js":"2","/home/mathius/projects/freeflow-redux-client/src/app/store.js":"3","/home/mathius/projects/freeflow-redux-client/src/components/Footer.js":"4","/home/mathius/projects/freeflow-redux-client/src/features/users/usersSlice.js":"5","/home/mathius/projects/freeflow-redux-client/src/features/posts/postsSlice.js":"6","/home/mathius/projects/freeflow-redux-client/src/Config/routes.js":"7","/home/mathius/projects/freeflow-redux-client/src/components/Navbar.js":"8","/home/mathius/projects/freeflow-redux-client/src/components/AppRoute.js":"9","/home/mathius/projects/freeflow-redux-client/src/reducers/index.js":"10","/home/mathius/projects/freeflow-redux-client/src/features/posts/VisiblePostsList.js":"11","/home/mathius/projects/freeflow-redux-client/src/features/users/UsersList.js":"12","/home/mathius/projects/freeflow-redux-client/src/features/posts/SinglePostPage.js":"13","/home/mathius/projects/freeflow-redux-client/src/features/posts/EditPostForm.js":"14","/home/mathius/projects/freeflow-redux-client/src/features/users/UserPage.js":"15","/home/mathius/projects/freeflow-redux-client/src/features/login/LoginPage.js":"16","/home/mathius/projects/freeflow-redux-client/src/features/login/userLoginSlice.js":"17","/home/mathius/projects/freeflow-redux-client/src/helpers/localStorage.js":"18","/home/mathius/projects/freeflow-redux-client/src/Context/index.jsx":"19","/home/mathius/projects/freeflow-redux-client/src/features/likes/likesSlice.js":"20","/home/mathius/projects/freeflow-redux-client/src/features/experiences/experiencesSlice.js":"21","/home/mathius/projects/freeflow-redux-client/src/features/comments/commentsSlice.js":"22","/home/mathius/projects/freeflow-redux-client/src/features/userSkills/userSkillsSlice.js":"23","/home/mathius/projects/freeflow-redux-client/src/features/dbSkills/dbSkillsSlice.js":"24","/home/mathius/projects/freeflow-redux-client/src/features/filters/filtersSlice.js":"25","/home/mathius/projects/freeflow-redux-client/src/features/postSkills/postSkillsSlice.js":"26","/home/mathius/projects/freeflow-redux-client/src/features/posts/postCounter/postCounterSlice.js":"27","/home/mathius/projects/freeflow-redux-client/src/features/posts/PostsList.js":"28","/home/mathius/projects/freeflow-redux-client/src/features/users/UserCard.js":"29","/home/mathius/projects/freeflow-redux-client/src/features/comments/AddCommentForm.js":"30","/home/mathius/projects/freeflow-redux-client/src/features/comments/CommentsList.js":"31","/home/mathius/projects/freeflow-redux-client/src/features/posts/PostExcerpt.js":"32","/home/mathius/projects/freeflow-redux-client/src/features/userSkills/fetchUserSkills.js":"33","/home/mathius/projects/freeflow-redux-client/src/features/users/UserSkills.js":"34","/home/mathius/projects/freeflow-redux-client/src/features/posts/AddPostForm.js":"35","/home/mathius/projects/freeflow-redux-client/src/Context/actions.jsx":"36","/home/mathius/projects/freeflow-redux-client/src/Context/context.jsx":"37","/home/mathius/projects/freeflow-redux-client/src/features/filters/Filter.js":"38","/home/mathius/projects/freeflow-redux-client/src/features/users/UserNameAndLogo.js":"39","/home/mathius/projects/freeflow-redux-client/src/features/users/UserImage.js":"40","/home/mathius/projects/freeflow-redux-client/src/features/posts/TimeAgo.js":"41","/home/mathius/projects/freeflow-redux-client/src/features/posts/PostExcerptSkills.js":"42","/home/mathius/projects/freeflow-redux-client/src/features/dbSkills/SkillSelector.js":"43","/home/mathius/projects/freeflow-redux-client/src/hooks/useVisualMode.js":"44","/home/mathius/projects/freeflow-redux-client/src/features/likes/likes.jsx":"45","/home/mathius/projects/freeflow-redux-client/src/components/ProgressBar/ProgressBar.jsx":"46","/home/mathius/projects/freeflow-redux-client/src/features/filters/FilterLink.js":"47","/home/mathius/projects/freeflow-redux-client/src/Context/reducer.jsx":"48","/home/mathius/projects/freeflow-redux-client/src/features/filters/Link.js":"49","/home/mathius/projects/freeflow-redux-client/src/helpers/generateRandomId.js":"50"},{"size":917,"mtime":1612985170387,"results":"51","hashOfConfig":"52"},{"size":716,"mtime":1612936691161,"results":"53","hashOfConfig":"52"},{"size":176,"mtime":1612936691161,"results":"54","hashOfConfig":"52"},{"size":142,"mtime":1612936691161,"results":"55","hashOfConfig":"52"},{"size":1048,"mtime":1612936691165,"results":"56","hashOfConfig":"52"},{"size":2960,"mtime":1613074110156,"results":"57","hashOfConfig":"52"},{"size":984,"mtime":1612936691161,"results":"58","hashOfConfig":"52"},{"size":1528,"mtime":1612936691161,"results":"59","hashOfConfig":"52"},{"size":552,"mtime":1612936691161,"results":"60","hashOfConfig":"52"},{"size":1161,"mtime":1612936691165,"results":"61","hashOfConfig":"52"},{"size":1700,"mtime":1612936691165,"results":"62","hashOfConfig":"52"},{"size":1694,"mtime":1612936691165,"results":"63","hashOfConfig":"52"},{"size":1038,"mtime":1612936691165,"results":"64","hashOfConfig":"52"},{"size":1691,"mtime":1612936691165,"results":"65","hashOfConfig":"52"},{"size":1877,"mtime":1612936691165,"results":"66","hashOfConfig":"52"},{"size":1497,"mtime":1612936691165,"results":"67","hashOfConfig":"52"},{"size":1257,"mtime":1612936691165,"results":"68","hashOfConfig":"52"},{"size":456,"mtime":1612936691165,"results":"69","hashOfConfig":"52"},{"size":195,"mtime":1612936691161,"results":"70","hashOfConfig":"52"},{"size":2686,"mtime":1612936691165,"results":"71","hashOfConfig":"52"},{"size":2423,"mtime":1612936691161,"results":"72","hashOfConfig":"52"},{"size":2668,"mtime":1612936691161,"results":"73","hashOfConfig":"52"},{"size":2425,"mtime":1612936691165,"results":"74","hashOfConfig":"52"},{"size":2763,"mtime":1613072676224,"results":"75","hashOfConfig":"52"},{"size":845,"mtime":1612936691165,"results":"76","hashOfConfig":"52"},{"size":3100,"mtime":1613025602673,"results":"77","hashOfConfig":"52"},{"size":1531,"mtime":1612936691165,"results":"78","hashOfConfig":"52"},{"size":1342,"mtime":1612985120911,"results":"79","hashOfConfig":"52"},{"size":910,"mtime":1612936691165,"results":"80","hashOfConfig":"52"},{"size":1766,"mtime":1612936691161,"results":"81","hashOfConfig":"52"},{"size":3854,"mtime":1612936691161,"results":"82","hashOfConfig":"52"},{"size":4770,"mtime":1613073023651,"results":"83","hashOfConfig":"52"},{"size":877,"mtime":1612936691165,"results":"84","hashOfConfig":"52"},{"size":895,"mtime":1612936691165,"results":"85","hashOfConfig":"52"},{"size":3878,"mtime":1613073938693,"results":"86","hashOfConfig":"52"},{"size":984,"mtime":1612936691161,"results":"87","hashOfConfig":"52"},{"size":933,"mtime":1612936691161,"results":"88","hashOfConfig":"52"},{"size":1351,"mtime":1612936691165,"results":"89","hashOfConfig":"52"},{"size":1059,"mtime":1612936691165,"results":"90","hashOfConfig":"52"},{"size":391,"mtime":1612936691165,"results":"91","hashOfConfig":"52"},{"size":434,"mtime":1612936691165,"results":"92","hashOfConfig":"52"},{"size":858,"mtime":1613073961740,"results":"93","hashOfConfig":"52"},{"size":1954,"mtime":1612936691161,"results":"94","hashOfConfig":"52"},{"size":600,"mtime":1612936691165,"results":"95","hashOfConfig":"52"},{"size":3561,"mtime":1612936691165,"results":"96","hashOfConfig":"52"},{"size":2168,"mtime":1612936691161,"results":"97","hashOfConfig":"52"},{"size":355,"mtime":1612936691165,"results":"98","hashOfConfig":"52"},{"size":963,"mtime":1612936691161,"results":"99","hashOfConfig":"52"},{"size":300,"mtime":1612936691165,"results":"100","hashOfConfig":"52"},{"size":267,"mtime":1612990766359,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1s6m226",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"/home/mathius/projects/freeflow-redux-client/src/index.js",[],["206","207"],"/home/mathius/projects/freeflow-redux-client/src/App.js",[],"/home/mathius/projects/freeflow-redux-client/src/app/store.js",[],"/home/mathius/projects/freeflow-redux-client/src/components/Footer.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/users/usersSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/postsSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/Config/routes.js",[],"/home/mathius/projects/freeflow-redux-client/src/components/Navbar.js",[],"/home/mathius/projects/freeflow-redux-client/src/components/AppRoute.js",[],"/home/mathius/projects/freeflow-redux-client/src/reducers/index.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/VisiblePostsList.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/users/UsersList.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/SinglePostPage.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/EditPostForm.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/users/UserPage.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/login/LoginPage.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/login/userLoginSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/helpers/localStorage.js",[],"/home/mathius/projects/freeflow-redux-client/src/Context/index.jsx",[],"/home/mathius/projects/freeflow-redux-client/src/features/likes/likesSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/experiences/experiencesSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/comments/commentsSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/userSkills/userSkillsSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/dbSkills/dbSkillsSlice.js",["208"],"\nimport {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter,\n  createSelector,\n} from '@reduxjs/toolkit'\nimport axios from 'axios';\n\nconst url = 'https://freeflow-two-point-o.herokuapp.com/api/db_skills'\n\nconst skillsAdapater = createEntityAdapter({\n  sortComparer: (a, b) => a.name.localeCompare(b.name),\n})\n\nconst initialState = skillsAdapater.getInitialState({\n  status: 'idle',\n  error: null,\n})\n\nexport const fetchSkills = createAsyncThunk('skills/fetchSkills', async () => {\n  const response = await axios.get(url);\n  return response.data\n})\n\nexport const addNewSkill = createAsyncThunk(\n  'skills/addNewLike',\n  async (intitialSkills) => {\n    const {name} = intitialSkills\n    const response = await axios.post(url, {name});\n    return response.data\n  }\n)\n\n\nexport const removeSkill = createAsyncThunk(\n  'skills/removeSkill',\n  async (intitialSkills) => {\n    const { post_id, skill_id} = intitialSkills\n    const removeSkill = {\n      post_id: post_id,\n      skill_id: skill_id,\n    };\n    const response = await axios.delete(url, { \n      params: { \n        removeSkill\n      }\n    });\n    return response.post\n  }\n)\n\nconst skillsSlice = createSlice({\n  name: 'skills',\n  initialState,\n  reducers: {\n    reactionAdded(state, action) {\n      const { skillId, reaction } = action.payload\n      const existingSkill = state.entities[skillId]\n      if (existingSkill) {\n        existingSkill.reactions[reaction]++\n      }\n    },\n  },\n  extraReducers: {\n    [fetchSkills.pending]: (state) => {\n      state.status = 'loading'\n    },\n    [fetchSkills.fulfilled]: (state, action) => {\n      state.status = 'succeeded'\n      // Add any fetched skills to the array\n      skillsAdapater.upsertMany(state, action.payload)\n    },\n    [fetchSkills.rejected]: (state, action) => {\n      state.status = 'failed'\n      state.error = action.error.message\n    },\n    [addNewSkill.fulfilled]: (state, action) => {\n      skillsAdapater.upsertOne(state, action.payload)\n    },\n    [removeSkill.fulfilled]: (state, action) => {\n      skillsAdapater.removeOne(state, action.payload)\n    } \n  },\n})\n\nexport const { skillAdded } = skillsSlice.actions\n\nexport default skillsSlice.reducer\n\nexport const {\n  selectAll: selectAllskills,\n  selectById: selectSkillById,\n  selectIds: selectSkillIds,\n} = skillsAdapater.getSelectors((state) => state.skills)\n\nexport const selectSkillsByIds = createSelector(\n  [selectAllskills, (state, skillIds) => skillIds],\n  (skills, skillIds) => {\n    \n    let filteredSkills = []\n    skills.filter((skill) => { \n    skillIds.forEach(skillId => {\n      if (skill.id === skillId) {\n        filteredSkills.push(skill.name)\n      }\n      // console.log(filteredSkills);\n    });\n  })\n  // console.log(filteredSkills);\n  return filteredSkills;\n}\n)","/home/mathius/projects/freeflow-redux-client/src/features/filters/filtersSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/postSkills/postSkillsSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/postCounter/postCounterSlice.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/PostsList.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/users/UserCard.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/comments/AddCommentForm.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/comments/CommentsList.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/PostExcerpt.js",["209","210","211"],"import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './CollapsibleCommentList.css';\nimport { UserNameAndLogo } from '../users/UserNameAndLogo'\nimport { TimeAgo } from './TimeAgo'\nimport {\n  removePost,\n  selectPostById,\n} from './postsSlice'\nimport { unwrapResult } from '@reduxjs/toolkit'\nimport { saveState } from '../../helpers/localStorage'\nimport Likes from '../likes/likes';\nimport { CommentsList } from '../comments/CommentsList';\nimport { AddCommentForm } from '../comments/AddCommentForm';\nimport { selectCommentsByPostId } from '../comments/commentsSlice';\nimport useVisualMode from \"../../hooks/useVisualMode\";\nimport { EditPostForm } from './EditPostForm';\nimport PostExcerptSkills from './PostExcerptSkills';\nimport { selectAllskills, selectSkillById, selectSkillsByIds } from '../dbSkills/dbSkillsSlice';\n\nconst SHOW = \"SHOW\";\n// const CONFIRM = \"CONFIRM\";\n// const SAVING = \"SAVING\";\nconst EDITING = \"EDITING\";\n// const ERROR_SAVE = \"ERROR_SAVE\";\n// const ERROR_DELETE = \"ERROR_DELETE\";\n\nexport default function PostExcerpt({ postId, onPost, index }) {\n  const dispatch = useDispatch()\n\n  const { user } = useSelector(state => state.user)\n\n  const loggedInUser = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : \"\";\n  \n  const userId = loggedInUser.id;\n  const post = useSelector((state) => selectPostById(state, postId))\n  const skills = useSelector(selectAllskills)\n\n  const postComments = useSelector((state) => selectCommentsByPostId(state, postId))\n\n  const commentsLength = postComments.length\n\n  const [addRequestStatus, setAddRequestStatus] = useState('idle')\n\n  const { mode, transition } = useVisualMode(SHOW);\n\n\n  function onEdit() {\n    transition(EDITING);\n  }\n\n  function onSaveEdit() {\n    transition(SHOW);\n  }\n\n  const canEditOrRemove =\n  [userId].every(Boolean) && addRequestStatus === 'idle'\n  // DELETE POST DISPATCH\n\n  const onDeletePostClicked = async () => {\n    if (canEditOrRemove) {\n      try {\n        setAddRequestStatus('pending')\n        const resultAction = await dispatch(\n          removePost({   post_id: post.id })\n        )\n        unwrapResult(resultAction)\n\n      } catch (err) {\n        console.error('Failed to remove like from post: ', err)\n      } finally {\n        setAddRequestStatus('idle')\n      }\n    }\n  }\n\n  return (\n    <article className=\"rounded p-2 mx-1 my-3 bg-white\" key={post.id}>\n      {/* <PostSkillsList /> */}\n      {/* TAGS, TIMEAGO */}\n      <div className=\"flex justify-between my-3\">\n        {/* <div>Skills: {postSkillNames}</div> */}\n        <PostExcerptSkills postSkillIds={post.skill_ids} />\n        {/* <h3 className=\"font-bold\">Tags: {post.name}</h3> */}\n        <TimeAgo timestamp={post.time_posted} />\n      </div>\n\n      {/* POST AUTHOR */}\n      <Link to={`/userprofile/${post.owner_id}`}\n      onClick={() => saveState(post.owner_id)}\n      >\n        <UserNameAndLogo onClick={saveState(post.owner_id)} userId={post.owner_id} />\n      </Link>\n      \n      {/* TEXT BODY */}\n      {mode === SHOW && (\n\n      <p className=\"flex justify-center px-12 py-5\">{post.text_body}</p>\n      )}\n\n      {mode === EDITING && (\n      <EditPostForm \n        postId={postId}\n        onSaveEdit={onSaveEdit}\n        value={post.text_body}\n      />\n      )}\n\n{ userId === post.owner_id ?\n      <div className=\"space-x-1 flex justify-end mr-2\">\n        <button onClick={() => onEdit()} className=\"text-red-600 cursor-pointer text-sm\">Edit</button>\n        <button onClick={() => onDeletePostClicked()} className=\"text-red-600 cursor-pointer text-sm\">Delete</button>\n      </div>\n        : \"\"\n      }\n      {/* LIKES */}\n      <Likes postId={postId} userId={userId} />\n\n      <div className=\"wrap-collapsible\">\n\n        <input \n          id={\"collapsible\" + index} className=\"toggle hidden\"  \n          type=\"checkbox\">\n        </input>\n\n        <label htmlFor={\"collapsible\" + index} className=\"lbl-toggle\">\n        {/* COMMENTS LIST FOR POST */}\n\n        {commentsLength > 1 ? <span>{commentsLength} comments</span> : \"\"}\n\n        {commentsLength === 1 ? <span>{commentsLength} comment</span> : \"\"}\n\n        </label>\n        <div className=\"collapsible-content\">\n          <CommentsList key={index} postId={postId} />\n          <div>\n            {/* <section className=\"validation\">{error}</section> */}\n          </div>\n        </div>\n        <AddCommentForm postId={postId} />\n      </div>\n\n      { onPost === true && user && user.id === post.owner_id ? \n      <div className=\"flex justify-center\">\n          <Link to={`/editPost/${post.id}`} className=\"btn btn-primary\">\n            Edit Post\n          </Link>\n        </div>\n                    : \"\"  \n      }\n    </article>\n  )\n}","/home/mathius/projects/freeflow-redux-client/src/features/userSkills/fetchUserSkills.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/users/UserSkills.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/AddPostForm.js",["212"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { unwrapResult } from '@reduxjs/toolkit'\nimport { addNewPost } from './postsSlice'\nimport SkillSelector from '../dbSkills/SkillSelector'\nimport { addPostSkills } from '../postSkills/postSkillsSlice'\nimport generateUID from '../../helpers/generateRandomId'\n\nexport default function AddPostForm() {\n  const [error, setError] = useState(\"\");\n  const [content, setContent] = useState('')\n  const [addRequestStatus, setAddRequestStatus] = useState('idle')\n  const posts = useSelector(state => state.posts.entities)\n\n  const postSkills = useSelector(state => state.postSkills.entities)\n\n  const loggedInUser = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : \"\"\n  \n\n  const userId = loggedInUser.id;\n  const dispatch = useDispatch()\n  const onContentChanged = (e) => setContent(e.target.value)\n\n  const canSave =\n    [content, userId].every(Boolean) && addRequestStatus === 'idle'\n\n  let id;\n\n  let postLength = Object.keys(posts).length;\n\n  const postSkillKeys = Object.keys(postSkills)\n\n  let wasSubmitted = false;\n  const OnSavePostClicked = async () => {\n    let uniquePostSkillId = generateUID()\n    postSkillKeys.forEach(skillId => \n      skillId === uniquePostSkillId ? uniquePostSkillId = generateUID() : \"\")\n    \n    const selectedSkill = JSON.parse(localStorage.getItem('selected_skill'));\n\n    if (content === \"\") {\n      setError(\"Post cannot be blank\");\n      return\n    }\n    if (selectedSkill === null) {\n      setError(\"Please select a skill\"); \n      return\n    } else if (canSave) {\n      let skillsArr = [selectedSkill.id]\n      id = postLength + 1;\n      if (id !== null && id !== undefined) {\n      try {\n        setAddRequestStatus('pending')\n        const postResultAction = await dispatch(\n          addNewPost({ \n            // id: id,\n            owner_id: userId, \n            text_body: content,\n            active: true, \n            is_helper: false, \n            is_helped: false, \n            avatar: loggedInUser.avatar,\n            username: loggedInUser.username,\n            skill_ids: skillsArr\n          })\n        )\n        unwrapResult(postResultAction)\n        setContent('')\n        setAddRequestStatus('pending')\n        // const postSkillResultAction = await dispatch(\n        //   addPostSkills({ \n        //     id: uniquePostSkillId,\n        //     post_id: id,\n        //     db_skills_id: selectedSkill.id, \n        //     name: selectedSkill.name\n        //   })\n        // )\n\n          // unwrapResult(postSkillResultAction)\n        } catch (err) {\n          console.error('Failed to save the post skill: ', err)\n        } finally {\n          setAddRequestStatus('idle')\n          localStorage.setItem('selected_skill', null);\n          setError(\"\")\n          wasSubmitted = true;\n        }\n      } \n    }\n  }\n  return (\n    <section>\n      <SkillSelector \n        id={id}\n        // canTriggerAxios={triggerPostSkillAxios}\n        loggedInUser={loggedInUser}\n        wasSubmitted={wasSubmitted} />\n      <form className=\"space-y-2 mx-2\">\n        <label htmlFor=\"postContent\"></label>\n        <textarea\n          placeholder=\"Add a new post...\"\n          className=\"w-full  border-1 border-solid border-gray-400 rounded-xl p-5\" \n          id=\"postContent rounded-xl\"\n          name=\"postContent\"\n          value={content}\n          data-testid=\"postText\"\n          rows=\"3\"\n          onChange={onContentChanged}\n        />\n        <section className=\"flex justify-center validation\">{error}</section>\n\n        <div className=\"flex justify-center\">\n\n          <div \n          className=\"btn btn-primary\"\n          type=\"button\" \n          data-testid=\"sendButton\"\n          onClick={OnSavePostClicked} disabled={!canSave}>\n            Post\n          </div>\n        </div>\n      </form>\n    </section>\n  )\n}\n","/home/mathius/projects/freeflow-redux-client/src/Context/actions.jsx",[],"/home/mathius/projects/freeflow-redux-client/src/Context/context.jsx",[],"/home/mathius/projects/freeflow-redux-client/src/features/filters/Filter.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/users/UserNameAndLogo.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/users/UserImage.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/TimeAgo.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/posts/PostExcerptSkills.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/dbSkills/SkillSelector.js",[],"/home/mathius/projects/freeflow-redux-client/src/hooks/useVisualMode.js",[],"/home/mathius/projects/freeflow-redux-client/src/features/likes/likes.jsx",[],"/home/mathius/projects/freeflow-redux-client/src/components/ProgressBar/ProgressBar.jsx",[],"/home/mathius/projects/freeflow-redux-client/src/features/filters/FilterLink.js",[],"/home/mathius/projects/freeflow-redux-client/src/Context/reducer.jsx",[],"/home/mathius/projects/freeflow-redux-client/src/features/filters/Link.js",[],"/home/mathius/projects/freeflow-redux-client/src/helpers/generateRandomId.js",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":102,"column":27,"nodeType":"219","messageId":"220","endLine":102,"endColumn":29},{"ruleId":"221","severity":1,"message":"222","line":20,"column":27,"nodeType":"223","messageId":"224","endLine":20,"endColumn":42},{"ruleId":"221","severity":1,"message":"225","line":20,"column":44,"nodeType":"223","messageId":"224","endLine":20,"endColumn":61},{"ruleId":"221","severity":1,"message":"226","line":38,"column":9,"nodeType":"223","messageId":"224","endLine":38,"endColumn":15},{"ruleId":"221","severity":1,"message":"227","line":6,"column":10,"nodeType":"223","messageId":"224","endLine":6,"endColumn":23},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'selectSkillById' is defined but never used.","Identifier","unusedVar","'selectSkillsByIds' is defined but never used.","'skills' is assigned a value but never used.","'addPostSkills' is defined but never used.","no-global-assign","no-unsafe-negation"]